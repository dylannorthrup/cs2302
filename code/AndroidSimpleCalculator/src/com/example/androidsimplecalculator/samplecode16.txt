
---------- strings.xml for AndroidSalutation

<?xml version="1.0" encoding="utf-8"?>
<resources>

    <string name="app_name">AndroidSalutation</string>
    <string name="action_settings">Settings</string>
    <string name="hello_world">Hello world!</string>
    <string name="heading">I want your name</string>
    <string name="helloStr">Hello</string>
    <string name="firstNameStr">What\'s your first name?</string>
    <string name="lastNameStr">What\'s your last name?</string>
    <string name="genderStr">What\'s your gender?</string>
    <string name="femaleStr">Female</string>
    <string name="maleStr">Male</string>
    <string name="salutationStr">Salutation</string>
    <string name="firstNameHint">Type First Name</string>
    <string name="LastNameHint">Type Last Name</string>

</resources>

---------- XML Layout for activity_salutation.xml

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingBottom="@dimen/activity_vertical_margin"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    tools:context=".SalutationActivity" >

    <TextView
        android:id="@+id/headerTxt"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignParentTop="true"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="22dp"
        android:text="@string/heading"
        android:textSize="20sp" />

    <TextView
        android:id="@+id/textView2"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/headerTxt"
        android:layout_marginTop="27dp"
        android:text="@string/firstNameStr" />

    <TextView
        android:id="@+id/textView3"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignLeft="@+id/textView2"
        android:layout_below="@+id/textView2"
        android:layout_marginTop="15dp"
        android:text="@string/lastNameStr" />

    <TextView
        android:id="@+id/textView4"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignLeft="@+id/textView3"
        android:layout_below="@+id/textView3"
        android:layout_marginTop="23dp"
        android:text="@string/genderStr" />

    <EditText
        android:id="@+id/firstNameTxtBx"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_above="@+id/textView3"
        android:layout_alignParentRight="true"
        android:layout_marginRight="16dp"
        android:ems="10"
        android:hint="@string/firstNameHint"
        android:inputType="text"
        android:textSize="12sp"
        android:width="120dp" />

    <EditText
        android:id="@+id/lastNameTxtBx"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_above="@+id/textView4"
        android:layout_alignLeft="@+id/firstNameTxtBx"
        android:ems="10"
        android:hint="@string/LastNameHint"
        android:inputType="text"
        android:textSize="12sp"
        android:width="120dp" >

        <requestFocus />
    </EditText>

    <RadioGroup
        android:id="@+id/radioGroup1"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_alignRight="@+id/lastNameTxtBx"
        android:layout_alignTop="@+id/textView4" >

        <RadioButton
            android:id="@+id/femaleRadBtn"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:checked="true"
            android:text="@string/femaleStr"
            android:textSize="14sp" />

        <RadioButton
            android:id="@+id/maleRadBtn"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="@string/maleStr"
            android:textSize="14sp" />

    </RadioGroup>

    <Button
        android:id="@+id/salutationBtn"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@+id/radioGroup1"
        android:layout_toLeftOf="@+id/lastNameTxtBx"
        android:text="@string/salutationStr"
        android:textSize="14sp" />

</RelativeLayout>

---------------

//******************************************************************
//  The AdroidSalutation App Activity.
//******************************************************************

import android.os.Bundle;
import android.app.Activity;
import android.view.Menu;
import android.view.View;
import android.widget.*;

public class SalutationActivity extends Activity {

	private Button btnSalutation;
	private TextView header;
	private EditText firstNameBx;
	private EditText lastNameBx;
	private RadioGroup genderBtns;
	private RadioButton femaleRadBtn;
	private RadioButton maleRadBtn;
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_salutation);
		
		header = (TextView) findViewById(R.id.headerTxt);
		firstNameBx = (EditText) findViewById(R.id.firstNameTxtBx);
		lastNameBx = (EditText) findViewById(R.id.lastNameTxtBx);
		genderBtns = (RadioGroup) findViewById(R.id.radioGroup1);
		femaleRadBtn = (RadioButton) findViewById(R.id.femaleRadBtn);
		maleRadBtn = (RadioButton) findViewById(R.id.maleRadBtn);
		
		btnSalutation = (Button) findViewById(R.id.salutationBtn);
		btnSalutation.setOnClickListener(new View.OnClickListener() {
		        @Override
		        public void onClick(View v) {
		        	String fullname = firstNameBx.getText() + " " +
		        			          lastNameBx.getText();
		        	
		        	int selectedID = genderBtns.getCheckedRadioButtonId();
		        	RadioButton gender = (RadioButton) findViewById(selectedID);
		        	
		        	if (gender == femaleRadBtn)
		        		header.setText("Hello Ms. " + fullname);
		        	else
		        		header.setText("Hello Mr. " + fullname);
		        }
		});
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.salutation, menu);
		return true;
	}

}

----------

---------- strings.xml AndroidSimpleCalculator

<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="app_name">AndroidCalculator</string>
    <string name="hello_world">Hello world!</string>
    <string name="menu_settings">Settings</string>
    <string name="strHeader">A Better Calculator</string>
    <string name="str1">1</string>
    <string name="str2">2</string>
    <string name="str3">3</string>
    <string name="str4">4</string>
    <string name="str5">5</string>
    <string name="str6">6</string>
    <string name="str7">7</string>
    <string name="str8">8</string>
    <string name="str9">9</string>
    <string name="str0">0</string>
    <string name="strPlus">+</string>
    <string name="strMinus">-</string>
    <string name="strMultiply">*</string>
    <string name="strDivide">/</string>
    <string name="strBK">BK</string>
    <string name="strOpen">(</string>
    <string name="strClose">)</string>
    <string name="strClear">C</string>
    <string name="strEquals">=</string>
    <string name="strDot">.</string>

</resources>

---------- XML Layout for activity_simplecalculator.xml

<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/calculator_display"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".SimpleCalculatorActivity" >

    <TextView
        android:id="@+id/TopLabel"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_alignParentTop="true"
        android:gravity="center"
        android:text="@string/strHeader"
        android:textAppearance="?android:attr/textAppearanceLarge" />

    <TextView
        android:id="@+id/numberView"
        android:layout_width="fill_parent"
        android:layout_height="wrap_content"
        android:layout_alignParentLeft="true"
        android:layout_below="@+id/TopLabel"
        android:layout_marginTop="18dp"
        android:background="#FFFFFF00"
        android:textIsSelectable="false"
        android:gravity="center"
        android:textAppearance="?android:attr/textAppearanceLarge" />

    <Button
        android:id="@+id/Button01"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_alignParentLeft="true"
        android:layout_below="@+id/numberView"
        android:layout_marginTop="22dp"
        android:text="@string/str1" />

    <Button
        android:id="@+id/Button02"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_alignBaseline="@+id/Button01"
        android:layout_alignBottom="@+id/Button01"
        android:layout_toRightOf="@+id/Button01"
        android:text="@string/str2" />

    <Button
        android:id="@+id/Button06"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_alignBaseline="@+id/Button05"
        android:layout_alignBottom="@+id/Button05"
        android:layout_alignLeft="@+id/Button03"
        android:text="@string/str6" />

    <LinearLayout
        android:id="@+id/linearLayout1"
        android:layout_width="2dp"
        android:layout_height="240dp"
        android:background="#000000" >
    </LinearLayout>

    <Button
        android:id="@+id/Button03"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_alignBaseline="@+id/Button02"
        android:layout_alignBottom="@+id/Button02"
        android:layout_toRightOf="@+id/Button02"
        android:text="@string/str3" />

    <Button
        android:id="@+id/Button05"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_below="@+id/Button01"
        android:layout_toRightOf="@+id/Button01"
        android:text="@string/str5" />

    <Button
        android:id="@+id/Button04"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_alignBaseline="@+id/Button05"
        android:layout_alignBottom="@+id/Button05"
        android:layout_alignParentLeft="true"
        android:text="@string/str4" />

    <Button
        android:id="@+id/Button09"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_alignBaseline="@+id/Button08"
        android:layout_alignBottom="@+id/Button08"
        android:layout_toRightOf="@+id/Button08"
        android:text="@string/str9" />

    <Button
        android:id="@+id/Button00"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_below="@+id/Button07"
        android:layout_toRightOf="@+id/Button04"
        android:text="@string/str0" />

    <Button
        android:id="@+id/Button08"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_below="@+id/Button06"
        android:layout_toRightOf="@+id/Button07"
        android:text="@string/str8" />

    <Button
        android:id="@+id/Button07"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_alignBaseline="@+id/Button08"
        android:layout_alignBottom="@+id/Button08"
        android:layout_toRightOf="@+id/linearLayout1"
        android:text="@string/str7" />

    <Button
        android:id="@+id/ButtonClear"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_alignLeft="@+id/Button09"
        android:layout_below="@+id/Button00"
        android:text="@string/strClear" />

    <Button
        android:id="@+id/ButtonClose"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_above="@+id/ButtonClear"
        android:layout_alignLeft="@+id/ButtonClear"
        android:text="@string/strClose" />

    <Button
        android:id="@+id/ButtonOpen"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_above="@+id/ButtonClear"
        android:layout_alignParentLeft="true"
        android:text="@string/strOpen" />

    <LinearLayout
        android:id="@+id/linearLayout2"
        android:layout_width="2dp"
        android:layout_height="240dp"
        android:layout_alignTop="@+id/Button03"
        android:layout_marginLeft="22dp"
        android:layout_toRightOf="@+id/Button09"
        android:background="#000000" >
    </LinearLayout>

    <Button
        android:id="@+id/ButtonPlus"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_above="@+id/Button06"
        android:layout_marginLeft="16dp"
        android:layout_toRightOf="@+id/linearLayout2"
        android:text="@string/strPlus" />

    <Button
        android:id="@+id/ButtonMinus"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_above="@+id/Button09"
        android:layout_alignLeft="@+id/ButtonPlus"
        android:text="@string/strMinus" />

    <Button
        android:id="@+id/ButtonDivide"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_above="@+id/ButtonClose"
        android:layout_alignLeft="@+id/ButtonMinus"
        android:text="@string/strDivide" />

    <Button
        android:id="@+id/ButtonMultiply"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_above="@+id/ButtonClear"
        android:layout_alignLeft="@+id/ButtonDivide"
        android:text="@string/strMultiply" />

    <Button
        android:id="@+id/ButtonEquals"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_alignBaseline="@+id/ButtonClear"
        android:layout_alignBottom="@+id/ButtonClear"
        android:layout_alignLeft="@+id/ButtonMultiply"
        android:text="@string/strEquals" />

    <Button
        android:id="@+id/ButtonBK"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_alignTop="@+id/ButtonDot"
        android:layout_toLeftOf="@+id/Button08"
        android:text="@string/strBK" />

    <Button
        android:id="@+id/ButtonDot"
        android:layout_width="65dp"
        android:layout_height="50dp"
        android:layout_below="@+id/Button00"
        android:layout_toLeftOf="@+id/ButtonClear"
        android:text="@string/strDot" />

</RelativeLayout>

---------------

//******************************************************************
//  EvaluateExpression an String expression given to the constructor
//  and returns the answer as a String by the getAnswer() method.
//******************************************************************

import java.util.*;

public class EvaluateExpression {

  String answer = "";
  
  /** Evaluate an double expression */
  public EvaluateExpression(String expression) {
    // Create operandStack to store operands
    Stack<Double> operandStack = new Stack<Double>();
  
    // Create operatorStack to store operators and ( and )
    Stack<Character> operatorStack = new Stack<Character>();
    
    // if the expression is empty, then answer = 0 and return
    try{
    if (expression.trim().equals("")) {
        answer = "0";
        return;
    }
  
    // Insert blanks around (, ), +, -, /, and *
    expression = insertBlanks(expression);

    // Extract operands and operators
    String[] tokens = expression.split(" ");
    // Phase 1: Scan tokens
    for (String token: tokens) {
      token = token.trim();
      if (token.length() == 0) // Blank space
        continue; // Back to extract the next token
      else if (isOperator(token.charAt(0))&& token.length()==1) {
          // Process all +, -, *, / in the top of the operator stack 
          while (!operatorStack.isEmpty() && 
                   isOperator(operatorStack.peek())&&   matchPrec(token.charAt(0),operatorStack.peek()))
              processAnOperator(operandStack, operatorStack);

          // Push the +, -, *, or / operator double the operator stack
          operatorStack.push(token.charAt(0));
      }
      else if (token.charAt(0) == '(') {
        operatorStack.push('('); // Push '(' to stack
      }
      else if (token.charAt(0) == ')') {
        // Process all the operators in the stack until seeing '('
        while (operatorStack.peek() != '(') {
          processAnOperator(operandStack, operatorStack);
        }
        operatorStack.pop(); // Pop the '(' symbol from the stack
      }
      else { // An operand scanned
        // Push an operand to the stack
        operandStack.push(new Double(token));
      }
    }

    // Phase 2: process all the remaining operators in the stack 
    while (!operatorStack.isEmpty()) {
      processAnOperator(operandStack, operatorStack);
    }
   

    // Return the result
    answer = "" + operandStack.pop();
 
  }
  catch(EmptyStackException e){
      answer = "Invalid Equation";
  }
  catch(ArithmeticException e){
      answer = "Can't divide by zero";
  }
  catch(Exception e){
      answer = "Improper Equation";
  }
  }
  
  /** Return the answer of the evaluation as a String */
  public String getAnswer()
  {
      return answer;
  }

  /** Process one operator: Take an operator from operatorStack and
   *  apply it on the operands in the operandStack */
  public void processAnOperator(
      Stack<Double> operandStack, Stack<Character> operatorStack) {
    char op = operatorStack.pop();
    double op1 = operandStack.pop();
    double op2 = operandStack.pop();
    if (op == '+') 
      operandStack.push(op2 + op1);
    else if (op == '-') 
      operandStack.push(op2 - op1);
    else if (op == '*') 
      operandStack.push(op2 * op1);
    else if (op == '/') 
      operandStack.push(op2 / op1);
  }
  
  public boolean isOperator(char val) {
    return (val == '+' || val == '-' || val == '*' || val == '/');
  }
  
  public String insertBlanks(String s) {
    String result = "";
    s = s.replaceAll("[-][-]", "+");
    s = s.replaceAll("[+][-]", "-");
    
    for (int i = 0; i < s.length(); i++) {      
      if (s.charAt(i) == '(' || s.charAt(i) == ')' || 
          s.charAt(i) == '+' || (s.charAt(i) == '-'&& i!=0) ||
          s.charAt(i) == '*' || s.charAt(i) == '/')
        result += " "+ s.charAt(i) + " ";
      else
        result += s.charAt(i);
    }
    result = result.replaceAll("[*]  - ", "* -");
    result = result.replaceAll("[/]  - ", "/ -");
    
    return result;
  }

  public boolean matchPrec(char tok1, char tok2) {
    return (tok1 == '+' || tok1 == '-' || tok2 == '*' || tok2 == '/');
  }
}

---------------

//******************************************************************
//  The AndroidCalculator App Activity.
//******************************************************************

import android.os.Bundle;
import android.app.Activity;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class CalculatorActivity extends Activity {

    private static TextView outputTxt = null;
    private static TextView headerTxt = null;
    private static String hdrMessage = null;
    private static Button button1 = null;
    private static Button button2 = null;
    private static Button button3 = null;
    private static Button button4 = null;
    private static Button button5 = null;
    private static Button button6 = null;
    private static Button button7 = null;
    private static Button button8 = null;
    private static Button button9 = null;
    private static Button button0 = null;
    private static Button buttonDecimal = null;
    private static Button buttonPlus = null;
    private static Button buttonMinus = null;
    private static Button buttonDivide = null;
    private static Button buttonMultiply = null;
    private static Button buttonEquals = null;
    private static Button buttonOpenPar = null;
    private static Button buttonClosePar = null;
    private static Button buttonBack = null;
    private static Button buttonClear = null;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_calculator);

        // Load the Output and Header TextViews
        outputTxt = (TextView) findViewById(R.id.txtOutput);
        headerTxt = (TextView) findViewById(R.id.txtHeader);
        
        // Load the default header message
        hdrMessage = getString(R.string.hdrStrMessage);
        
        /************* Loading Buttons  **************/
        button1 = (Button) findViewById(R.id.button1);
        button1.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStr1));
            }
        });
        
        button2 = (Button) findViewById(R.id.button2);
        button2.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStr2));
            }
        });
        
        button3 = (Button) findViewById(R.id.button3);
        button3.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStr3));
            }
        });
        
        button4 = (Button) findViewById(R.id.button4);
        button4.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStr4));
            }
        });
        
        button5 = (Button) findViewById(R.id.button5);
        button5.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStr5));
            }
        });
        
        button6 = (Button) findViewById(R.id.button6);
        button6.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStr6));
            }
        });
        
        button7 = (Button) findViewById(R.id.button7);
        button7.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStr7));
            }
        });
        
        button8 = (Button) findViewById(R.id.button8);
        button8.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStr8));
            }
        });
        
        button9 = (Button) findViewById(R.id.button9);
        button9.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStr9));
            }
        });
        
        button0 = (Button) findViewById(R.id.button0);
        button0.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStr0));
            }
        });
        
        buttonDecimal = (Button) findViewById(R.id.buttonDecimal);
        buttonDecimal.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStrDecimal));
            }
        });
        
        buttonOpenPar = (Button) findViewById(R.id.buttonOpenPar);
        buttonOpenPar.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStrOpenPar));
            }
        });

        buttonClosePar = (Button) findViewById(R.id.buttonClosePar);
        buttonClosePar.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStrClosePar));
            }
        });

        buttonClear = (Button) findViewById(R.id.buttonClear);
        buttonClear.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                outputTxt.setText("");
            }
        });

        buttonBack = (Button) findViewById(R.id.buttonBack);
        buttonBack.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                ;
            }
        });

        buttonPlus = (Button) findViewById(R.id.buttonPlus);
        buttonPlus.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStrPlus));
            }
        });

        buttonMinus = (Button) findViewById(R.id.buttonMinus);
        buttonMinus.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStrMinus));
            }
        });

        buttonDivide = (Button) findViewById(R.id.buttonDivide);
        buttonDivide.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStrDivide));
            }
        });

        buttonMultiply = (Button) findViewById(R.id.buttonMultiply);
        buttonMultiply.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                addToOutput(getString(R.string.btnStrMultiply));
            }
        });

        buttonEquals = (Button) findViewById(R.id.buttonEquals);
        buttonEquals.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                ;
            }
        });
    }
    
    // Adds the given text to the text in the output label box
    private void addToOutput(String appendStr)
    {
        outputTxt.setText(outputTxt.getText() + appendStr);
    }

    // Handles the menu
    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.calculator, menu);
        return true;
    }

}

